pipeline {
    agent any
    
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }

    stages {
        stage('Git checkout') {
            steps {
                git branch: 'latest', url: 'https://github.com/ersanjaysah/10-MicroService-Appliction.git'
            }
        }
        
        stage('SonarQube') {
            steps {
                withSonarQubeEnv('sonar') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectKey=10Tier -Dsonar.projectName=10Tier -Dsonar.java.binaries=. '''
                }
            }
        }
        
        stage('adservice') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        dir('/var/lib/jenkins/workspace/10Tier/src/adservice/') {
                            sh 'docker build -t ssah6694/adservice:latest .'
                            sh 'docker push ssah6694/adservice:latest'
                            sh 'docker rmi ssah6694/adservice:latest'
                        }
                    }
                }
                    
            }
        }
        
        stage('cartservice') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        dir('/var/lib/jenkins/workspace/10Tier/src/cartservice/src/') {
                            sh 'docker build -t ssah6694/cartservice:latest .'
                            sh 'docker push ssah6694/cartservice:latest'
                            sh 'docker rmi ssah6694/cartservice:latest'
                        }
                    }
                }
            }
        }
        
        stage('checkoutservice') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        dir('/var/lib/jenkins/workspace/10Tier/src/checkoutservice/') {
                            sh 'docker build -t ssah6694/checkoutservice:latest .'
                            sh 'docker push ssah6694/checkoutservice:latest'
                            sh 'docker rmi ssah6694/checkoutservice:latest'
                        }
                    }
                }
            }
        }
        
        stage('currencyservice') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        dir('/var/lib/jenkins/workspace/10Tier/src/currencyservice/') {
                            sh 'docker build -t ssah6694/currencyservice:latest .'
                            sh 'docker push ssah6694/currencyservice:latest'
                            sh 'docker rmi ssah6694/currencyservice:latest'
                        }
                    }
                }
            }
        }
        
        stage('emailservice') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        dir('/var/lib/jenkins/workspace/10Tier/src/emailservice/') {
                            sh 'docker build -t ssah6694/emailservice:latest .'
                            sh 'docker push ssah6694/emailservice:latest'
                            sh 'docker rmi ssah6694/emailservice:latest'
                        }
                    }
                }
            }
        }
        
        stage('frontend') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        dir('/var/lib/jenkins/workspace/10Tier/src/frontend/') {
                            sh 'docker build -t ssah6694/frontend:latest .'
                            sh 'docker push ssah6694/frontend:latest'
                            sh 'docker rmi ssah6694/frontend:latest'
                        }
                    }
                }
            }
        }
        
        stage('loadgenerator') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        dir('/var/lib/jenkins/workspace/10Tier/src/loadgenerator/') {
                            sh 'docker build -t ssah6694/loadgenerator:latest .'
                            sh 'docker push ssah6694/loadgenerator:latest'
                            sh 'docker rmi ssah6694/loadgenerator:latest'
                        }
                    }
                }
            }
        }
        
        stage('paymentservice') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        dir('/var/lib/jenkins/workspace/10Tier/src/paymentservice/') {
                            sh 'docker build -t ssah6694/paymentservice:latest .'
                            sh 'docker push ssah6694/paymentservice:latest'
                            sh 'docker rmi ssah6694/paymentservice:latest'
                        }
                    }
                }
            }
        }
        
        stage('productcatalogservice') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        dir('/var/lib/jenkins/workspace/10Tier/src/productcatalogservice/') {
                            sh 'docker build -t ssah6694/productcatalogservice:latest .'
                            sh 'docker push ssah6694/productcatalogservice:latest'
                            sh 'docker rmi ssah6694/productcatalogservice:latest'
                        }
                    }
                }
            }
        }
        
        stage('recommendationservice') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        dir('/var/lib/jenkins/workspace/10Tier/src/recommendationservice/') {
                            sh 'docker build -t ssah6694/recommendationservice:latest .'
                            sh 'docker push ssah6694/recommendationservice:latest'
                            sh 'docker rmi ssah6694/recommendationservice:latest'
                        }
                    }
                }
            }
        }
        
        stage('shippingservice') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        dir('/var/lib/jenkins/workspace/10Tier/src/shippingservice/') {
                            sh 'docker build -t ssah6694/shippingservice:latest .'
                            sh 'docker push ssah6694/shippingservice:latest'
                            sh 'docker rmi ssah6694/shippingservice:latest'
                        }
                    }
                }
            }
        }
        
        stage('k8-deploy') {
            steps {
               withKubeConfig(caCertificate: '', clusterName: 'EKS-1', contextName: '', credentialsId: 'k8-token', namespace: 'webapps', restrictKubeConfigAccess: false, serverUrl: 'https://22D3666FDC6AEA88A0050C19032986F5.gr7.eu-north-1.eks.amazonaws.com') {
                    sh 'kubectl apply -f deployment-service.yml'
                    sh 'kubectl get pods'
                    sh 'kubectl get svc'
                }
            }
        }   
    }
}
